package br.mil.eb.ime.rosalind.solutions.coursera

import br.mil.eb.ime.rosalind.algo.DNAProfiler

/**
 * Created with IntelliJ IDEA.
 * User: jonas
 * Date: 11/13/13
 * Time: 11:14 PM
 * To change this template use File | Settings | File Templates.
 * @see W1L1_FREQUENTWORD DNA
 *      dataset_8_4.txt
 */


/*
Input
CACAGTAGGCGCCGGCACACACAGCCCCGGGCCCCGGGCCGCCCCGGGCCGGCGGCCGCCGGCGCCGGCACACCGGCACAGCCGTACCGGCACAGTAGTACCGGCCGGCCGGCACACCGGCACACCGGGTACACACCGGGGCGCACACACAGGCGGGCGCCGGGCCCCGGGCCGTACCGGGCCGCCGGCGGCCCACAGGCGCCGGCACAGTACCGGCACACACAGTAGCCCACACACAGGCGGGCGGTAGCCGGCGCACACACACACAGTAGGCGCACAGCCGCCCACACACACCGGCCGGCCGGCACAGGCGGGCGGGCGCACACACACCGGCACAGTAGTAGGCGGCCGGCGCACAGCC 10 2
Output
GCACACAGAC GCGCACACAC
 */
object W1L7_FREQUENT_WORDS_WITH_MISMATCHES extends App {

  val sequence = "TTGTTAGTTAGTTCTAGTACCTGACCACCTAGTTTGTTTGTTAGTTAGTTCACCTAGTTCTGTTGTTGTTGTTAGTTAGTTTGTTTGTTAGTTCTAGTTGTCTAGTTGTAGTTCTAGTTAGTTGACCTTGTTCTGTGTCACCTCACCTTGTTAGTTTGTTGTGTAGTTCTTGTTTGTTAGTTCTTGTTTGTTAGTACCTTGTTAGTTTGTTCTTGTTGTAGTTCTGACCACCTTGTTAGTTGACCACCTAGTTCTTGTTGTAGTTGTGTTGTTAGTTCTAGTACCTAGTTCTTGTTCTAGTTGTAGTTTGTTTGTTTGTACCACCACCTCTAGTTGTCACCTCTTGT"
  val k = 9
  val tolerance = 2
  val count = DNAProfiler.countKMers(k,sequence,tolerance)
  val max  = count.maxBy(_._2)
  for (kmer <- count; if (kmer._2 == max._2))
    print(kmer._1 + " ")
//  val combs = "gact".combinations(2)
//  println(combs)
//  for (c<- combs)
//    println(c.mkString(""))


}
